:root {
  background: #3880ff;
  --ion-background-color: #3880ff;
  --ion-text-color: var(--ion-color-primary);
  --ion-header-size: 40px;
  --ratio: 1.5;
  --s-5: calc(var(--s-4) / var(--ratio));
  --s-4: calc(var(--s-3) / var(--ratio));
  --s-3: calc(var(--s-2) / var(--ratio));
  --s-2: calc(var(--s-1) / var(--ratio));
  --s-1: calc(var(--s0) / var(--ratio));
  --s0: 1rem;
  --s1: calc(var(--s0) * var(--ratio));
  --s2: calc(var(--s1) * var(--ratio));
  --s3: calc(var(--s2) * var(--ratio));
  --s4: calc(var(--s3) * var(--ratio));
  --s5: calc(var(--s4) * var(--ratio));
  --measure: 200px;
  --doubleMeasure: 400px;
}

ion-content {
  --ion-background-color: transparent;
}

ion-fab {
  direction: ltr;
  display: flex;
}

.stack {
  --space: 1.5rem;
}

.stack > * {
  margin-top: 0;
  margin-bottom: 0;
}

.stack > * + * {
  margin-top: var(--space);
}

.box {
  padding: var(--s1);
  border: var(--border-thin) solid;
  --color-light: #fff;
  --color-dark: #000;
  color: var(--color-dark);
  background-color: var(--color-light);
}

.box * {
  color: inherit;
}

.box.invert {
  color: var(--color-light);
  background-color: var(--color-dark);
}

.center {
  box-sizing: content-box;
  margin-left: auto;
  margin-right: auto;
  max-width: var(--measure);
  padding-left: 5;
  padding-right: 5;
}

.center-text {
  text-align: center;
}

.intrinsic {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.cluster {
  --space: 1rem;
  overflow: hidden;
}

.cluster > * {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-items: center;
  margin: calc(var(--space) / 2 * -1);
}

.cluster > * > * {
  margin: calc(var(--space) / 2);
}

.with-sidebar {
  overflow: hidden;
}

.with-sidebar > * {
  display: flex;
  flex-wrap: wrap;
  margin: calc(var(--s1) / 2 * -1);
}

.with-sidebar > * > * {
  margin: calc(var(--s1) / 2);
  flex-grow: 1;
}

.with-sidebar > * > :last-child {
  flex-basis: 0;
  flex-grow: 999;
  min-width: calc(50% - var(--s1));
}
.with-sidebar {
  overflow: hidden;
}

.sidebar > * {
  display: flex;
  flex-wrap: wrap;
  margin: calc(0px / 2 * -1);
}

.sidebar > * > * {
  margin: calc(0px / 2);
  flex-basis: 200px;
  flex-grow: 1;
}

.sidebar > * > :first-child {
  flex-basis: 0;
  flex-grow: 999;
  min-width: calc(50% - 0px);
}

.switcher > * {
  display: flex;
  flex-wrap: wrap;
  margin: calc((var(--s1) / 2) * -1);
}

.switcher > * > * {
  flex-grow: 1;
  flex-basis: calc((400px - (100% - var(--s1))) * 999);
  margin: calc(var(--s1) / 2);
}

.switcher > * > :nth-last-child(n + 6),
.switcher > * > :nth-last-child(n + 6) ~ * {
  flex-basis: 100%;
}

.cover {
  display: flex;
  flex-direction: column;
  min-height: 100%;
  padding: 1rem;
}

.cover > * {
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.cover > :first-child:not(.centered) {
  margin-top: 0;
}

.cover > :last-child:not(.centered) {
  margin-bottom: 0;
}

.cover > .centered {
  margin-top: auto;
  margin-bottom: auto;
}

.grid {
  display: grid;
  grid-gap: 0.2rem;
  grid-template-columns: 100%;
}

.grid.aboveMin {
  grid-template-columns: repeat(auto-fill, minmax(10rem, 1fr));
}

@supports (min-width: 200px) {
  .grid {
    grid-template-columns: repeat(auto-fit, minmax(10rem, 1fr));
  }
}
.grid.sm {
  display: grid;
  grid-gap: 0.2rem;
  grid-template-columns: 100%;
}

.grid.sm.aboveMin {
  grid-template-columns: repeat(auto-fill, minmax(2rem, 1fr));
}

@supports (min-width: 200px) {
  .grid.sm {
    grid-template-columns: repeat(auto-fit, minmax(2rem, 1fr));
  }
}

.frame {
  --n: 6;
  --d: 9;
  padding-bottom: calc(var(--n) / var(--d) * 100%);
  position: relative;
}

.frame > * {
  overflow: hidden;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: flex;
  justify-content: center;
  align-items: center;
}

.frame > img,
.frame > video {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.grid > .box {
  max-height: 30rem;
}

input {
  width: calc(100% - 2rem);
  min-width: 20rem;
  margin-left: 1rem;
  margin-right: 1rem;
}
